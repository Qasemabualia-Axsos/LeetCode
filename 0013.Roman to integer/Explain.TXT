🧠 Problem:
Convert a Roman numeral string into an integer.

Roman numerals are based on these symbols:

mathematica
نسخ
تحرير
Symbol:     I    V    X    L    C     D     M
Value:      1    5   10   50  100   500  1000
However, sometimes a smaller value before a larger one means subtraction, like:

IV = 4 (5 - 1)

IX = 9 (10 - 1)

XL = 40 (50 - 10)

🔍 Code Explanation:
js
نسخ
تحرير
var romanToInt = function(s) {
This defines a function romanToInt that takes a string s containing Roman numerals.

js
نسخ
تحرير
    const rom = { I:1, V:5, X:10, L:50, C:100, D:500, M:1000 };
This is a lookup object (dictionary) to get the integer value for each Roman character.

js
نسخ
تحرير
    let num = 0;
We initialize num to keep track of the total converted value.

js
نسخ
تحرير
    for(let i = 0; i < s.length; i++) {
We loop through each character in the Roman string s.

js
نسخ
تحرير
        if(
            (i > 0 && (s[i] === 'V' || s[i] === 'X') && s[i - 1] === 'I') ||
            (i > 0 && (s[i] === 'L' || s[i] === 'C') && s[i - 1] === 'X') ||
            (i > 0 && (s[i] === 'D' || s[i] === 'M') && s[i - 1] === 'C')
        ) {
This if condition checks if we’re in a subtractive case, like:

Current	Previous	Meaning	Computation
V	I	IV = 4	5 - 2×1 = 3 (because 1 was already added)
X	I	IX = 9	10 - 2×1 = 8
etc.			

So we subtract twice the value of the previous character (since we already added it in the previous loop step).

js
نسخ
تحرير
            num += rom[s[i]] - 2 * rom[s[i - 1]];
We subtract the value that was previously added, then subtract it again to get the correct subtraction.

js
نسخ
تحرير
        } else {
            num += rom[s[i]];
        }
If it's not a subtraction case, just add the current character's value to num.

js
نسخ
تحرير
    }
    return num;
};
Return the final number.

🔁 Example: "IX"
I = 1 → num = 1

X = 10:

I was before X → special case: num += 10 - 2×1 = 8

total: 1 + 8 = 9

✅ Summary:
Uses a map to convert characters.

Checks for special subtractive cases.

Subtracts 2 × previous when needed.

Adds values normally otherwise.

Would you like me to rewrite this into a simpler or cleaner version?